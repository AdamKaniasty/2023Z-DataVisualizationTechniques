df1 %>% ggplot(aes(x=`valence_%`,col = season)) + geom_density()
#### 7. Jakie charakterystyki taneczności, energetyki itd. mają piosenki publikowane w poszczególnych porach roku?
df1 <- df %>% mutate(season = case_when(
released_month %in% c(1,2) | (released_month==12 & released_day >=22) | (released_month==3 & released_day<21) ~ "winter",
released_month %in% c(4,5) | (released_month==3 & released_day >=21) | (released_month==6 & released_day<22) ~ "spring",
released_month %in% c(7,8) | (released_month==6 & released_day >= 22) | (released_month==9 & released_day<23) ~ "summer",
T ~ "autumn"
)) %>%
select(`danceability_%`,`energy_%`,`valence_%`,season)
df1 %>% ggplot(aes(x=`valence_%`,col = season)) + geom_density()
#### 7. Jakie charakterystyki taneczności, energetyki itd. mają piosenki publikowane w poszczególnych porach roku?
df1 <- df %>% mutate(season = case_when(
released_month %in% c(1,2) | (released_month==12 & released_day >=22) | (released_month==3 & released_day<21) ~ "winter",
released_month %in% c(4,5) | (released_month==3 & released_day >=21) | (released_month==6 & released_day<22) ~ "spring",
released_month %in% c(7,8) | (released_month==6 & released_day >= 22) | (released_month==9 & released_day<23) ~ "summer",
T ~ "autumn"
)) %>%
select(`danceability_%`,`energy_%`,`valence_%`,season)%>%
group_by(season)%>%
summarise(mean_dance = mean(`danceability_%`),mean_energy = mean(`energy_%`), mean_liveness = mean(`valence_%`))
df1
#### 7. Jakie charakterystyki taneczności, energetyki itd. mają piosenki publikowane w poszczególnych porach roku?
df1 <- df %>% mutate(season = case_when(
released_month %in% c(1,2) | (released_month==12 & released_day >=22) | (released_month==3 & released_day<21) ~ "winter",
released_month %in% c(4,5) | (released_month==3 & released_day >=21) | (released_month==6 & released_day<22) ~ "spring",
released_month %in% c(7,8) | (released_month==6 & released_day >= 22) | (released_month==9 & released_day<23) ~ "summer",
T ~ "autumn"
)) %>%
select(`danceability_%`,`energy_%`,`valence_%`,season)
df1 %>% ggplot(aes(x=`danceability_%`,col = season)) + geom_density()
df1 %>% ggplot(aes(x=`energy_%`,col = season)) + geom_density()
df1 %>% ggplot(aes(x=`valence_%`,col = season)) + geom_density()
df2 <- df1 %>%group_by(season)%>%
summarise(mean_dance = mean(`danceability_%`),mean_energy = mean(`energy_%`), mean_valence = mean(`valence_%`))
df2
df1 %>% ggplot(aes(x=`danceability_%`,col = season)) + geom_density()
df1 %>% ggplot(aes(x=`energy_%`,col = season)) + geom_density()
df %>% group_by(key,mode) %>% summarise(k_m_count = count())
df %>% group_by(key,mode) %>% summarise(k_m_count = n())
df %>% group_by(key,mode) %>% summarise(k_m_count = n(), .groups = "drop")
df %>% group_by(key,mode) %>% count()
df %>% group_by(key,mode) %>% mutate(k_m_count = n())
df %>% group_by(key,mode) %>% summarise(k_m_count = n(), .groups = "drop")
df %>% group_by(key,mode) %>%
summarise(k_m_count = n(), .groups = "drop") %>%
top_n(10,k_m_count)
df %>% filter(!is.na(key) & !is.na(mode))%>%
group_by(key,mode) %>%
summarise(k_m_count = n(), .groups = "drop") %>%
top_n(10,k_m_count)
topkm <- df %>% filter(!is.na(key) & !is.na(mode))%>%
group_by(key,mode) %>%
summarise(k_m_count = n(), .groups = "drop") %>%
top_n(10,k_m_count)
df %>% filter(!is.na(key) & !is.na(mode))%>%
group_by(key,mode) %>%
mutate(k_m_count = n())
df %>% filter(!is.na(key) & !is.na(mode))%>%
group_by(key,mode) %>%
summarise(k_m_count = n(), .groups = "drop") %>%
top_n(10,k_m_count)
df %>% filter(key %in% topkm$key & mode %in% topkm$mode)
df %>% filter(key %in% topkm$key & mode %in% topkm$mode)
df %>% filter(key %in% topkm$key & mode %in% topkm$mode) %>% select(key,mode)
topkm <- paste(topkm$key,topkm$mode,sep="-")
topkm
df1 <- df %>% mutate(km = paste(key,mode,sep="-"))
df1$km
df1 %>% filter(km %in% topkm)
topkm <- df %>% filter(!is.na(key) & !is.na(mode))%>%
group_by(key,mode) %>%
summarise(k_m_count = n(), .groups = "drop") %>%
top_n(10,k_m_count)
topkm
topkm <- df %>% filter(!is.na(key) & !is.na(mode))%>%
group_by(key,mode) %>%
summarise(k_m_count = n(), .groups = "drop") %>%
top_n(10,k_m_count)
topkm <- paste(topkm$key,topkm$mode,sep="-")
df1 <- df %>% mutate(km = paste(key,mode,sep="-"))%>%
filter(km %in% topkm)
df1
View(df1)
df1 <- df %>% mutate(km = paste(key,mode,sep="-"))%>%
filter(km %in% topkm) %>%
group_by(km) %>%
summarise(solo=mean(artist_count==1))
df1
df1 <- df %>% mutate(km = paste(key,mode,sep="-"))%>%
filter(km %in% topkm) %>%
group_by(km) %>%
mutate(ct = n())
df1
df1 <- df %>% mutate(km = paste(key,mode,sep="-"))%>%
filter(km %in% topkm) %>%
group_by(km) %>%
mutate(ct = n()) %>% mutate(solo = sum(artist_count==1))
View(df1)
df1 <- df %>% mutate(km = paste(key,mode,sep="-"))%>%
filter(km %in% topkm) %>%
group_by(km) %>%
mutate(ct = n()) %>% mutate(solo = sum(artist_count==1)) %>% mutate(p = solo/ct)
View(df1)
df1 <- df %>% mutate(km = paste(key,mode,sep="-"))%>%
filter(km %in% topkm) %>%
group_by(km) %>%
summarise(solo=mean(artist_count==1))
df1
df1 <- df %>% mutate(km = paste(key,mode,sep="-"))%>%
filter(km %in% topkm) %>%
group_by(km) %>%
summarise(solo=mean(artist_count==1)) %>%
top_n(1,solo)
df %>% mutate(km = paste(key,mode,sep="-"))%>%
filter(km %in% topkm) %>%
group_by(km) %>%
summarise(solo=mean(artist_count==1)) %>%
top_n(1,solo)
source("C:/Users/micha/OneDrive/Pulpit/MINI/WizualizacjaDanych (R + Python)/2023Z-DataVisualizationTechniques/homeworks/hw1/HW1_tasks.R", echo=TRUE)
df %>% mutate(km = paste(key,mode,sep="-"))%>%
filter(km %in% topkm) %>%
group_by(km) %>%
summarise(solo=mean(artist_count==1)) %>%
top_n(1,solo) %>%
pull(km)
df %>% group_by(`artist(s)_name`) %>% summarise(all_streams = sum(streams))
df %>% mutate(streams = as.numeric(streams))%>%
group_by(`artist(s)_name`) %>%
summarise(all_streams = sum(streams))
df %>% filter(!is.na(streams))%>%
mutate(streams = as.numeric(streams))
df %>% filter(!is.na(streams))
df1<-df %>% filter(!is.na(streams))
View(df1)
df1<-df %>% filter(!is.na(streams))%>%
mutate(streams = as.numeric(streams))
df1<-df %>% filter(!is.na(streams))
df1%>%  mutate(streams = as.numeric(streams))
df1<-df %>% filter(!is.na(streams))
df1$streams
df1<-df %>% mutate(streams = as.numeric(streams))%>%
filter(!is.na(streams))
df1<-df %>% mutate(streams = as.numeric(streams))%>%
filter(!is.na(streams))%>%
group_by(`artist(s)_name`) %>%
summarise(all_streams = sum(streams))
df1
df1<-df %>% mutate(streams = as.numeric(streams))%>%
filter(!is.na(streams))%>%
group_by(`artist(s)_name`) %>%
summarise(all_streams = sum(streams)) %>%
top_n(1,all_streams)
df %>% mutate(streams = as.numeric(streams))%>%
filter(!is.na(streams))%>%
group_by(`artist(s)_name`) %>%
summarise(all_streams = sum(streams)) %>%
top_n(1,all_streams)
df %>% mutate(streams = as.numeric(streams))%>%
filter(!is.na(streams))%>%
group_by(`artist(s)_name`) %>%
summarise(all_streams = sum(streams)) %>%
top_n(1,all_streams) %>%
pull(`artist(s)_name`)
#### 10. Dla artystów, którzy zadebiutowali na spotify w 2022 roku,
### zrób zestawienie ogólnej liczby utworów wykonanych w poszczególnych skalach ('mode') i tonacji ('key').
### W wyniku jeden wiersz powinien odpowiadać jednemu artyście, informację o tych liczbach umieść w kolejnych kolumnach.
df %>% group_by(`artist(s)_name`) %>% summarise(debut = min(released_year))
#### 10. Dla artystów, którzy zadebiutowali na spotify w 2022 roku,
### zrób zestawienie ogólnej liczby utworów wykonanych w poszczególnych skalach ('mode') i tonacji ('key').
### W wyniku jeden wiersz powinien odpowiadać jednemu artyście, informację o tych liczbach umieść w kolejnych kolumnach.
df %>% group_by(`artist(s)_name`) %>%
summarise(debut = min(released_year)) %>%
filter(debut == 2022)
`2022_debutants` <- df %>% group_by(`artist(s)_name`) %>%
summarise(debut = min(released_year)) %>%
filter(debut == 2022) %>%
pull(`artist(s)_name`)
unique(`2022_debutants`)
debutants <- df %>% group_by(`artist(s)_name`) %>%
summarise(debut = min(released_year)) %>%
filter(debut == 2022) %>%
pull(`artist(s)_name`)
df %>% filter(`artist(s)_name` %in% debutants)
df %>% filter(`artist(s)_name` %in% debutants) %>%
group_by(`artist(s)_name`,key,mode) %>% summarise(n_of_songs=n())
df1<-df %>% filter(`artist(s)_name` %in% debutants) %>%
group_by(`artist(s)_name`,key,mode) %>% summarise(n_of_songs=n())
View(df1)
df %>% filter(`in_spotify_playlists`>`in_apple_playlists`)
str(df)
max(df$streams)
max(as.numeric(df$streams))
max(na.omit(as.numeric(df$streams)))
%>%
df %>% filter(`in_spotify_playlists`>`in_apple_playlists`) %>%
filter(in_spotify_charts==0 & in_apple_charts>0)
df %>% filter(`in_spotify_playlists`>`in_apple_playlists`) %>%
filter(in_spotify_charts==0 & in_apple_charts>0) %>%
pull(track_name)
topkm <- df %>% filter(!is.na(key) & !is.na(mode))%>%
group_by(key,mode) %>%
summarise(k_m_count = n(), .groups = "drop") %>%
top_n(10,k_m_count)
topkm <- paste(topkm$key,topkm$mode,sep="-")
df %>% mutate(km = paste(key,mode,sep="-"))%>%
filter(km %in% topkm) %>%
group_by(km) %>%
summarise(solo=mean(artist_count==1)) %>%
top_n(1,solo) %>%
pull(km)
df %>% mutate(streams = as.numeric(streams))%>%
filter(!is.na(streams))%>%
group_by(`artist(s)_name`) %>%
summarise(all_streams = sum(streams)) %>%
top_n(1,all_streams) %>%
pull(`artist(s)_name`)
df1 <- df %>% select(`artist(s)_name`,artist_count,streams)
str_split(df1$`artist(s)_name`,",")
as.data.frame(str_split(df1$`artist(s)_name`,","))
paste("artist",1:8)
df1 <- df %>% select(`artist(s)_name`,artist_count,streams) %>%
separate(`artist(s)_name`,into=c(paste("artist",1:max(df$artist_count),"-")),",")
warnings()
df1
View(df1)
df1 <- df %>% select(`artist(s)_name`,artist_count,streams) %>%
separate(`artist(s)_name`,into=c(paste("artist",1:max(df$artist_count),"-")),",",drop=F)
df1 <- df %>% select(`artist(s)_name`,artist_count,streams) %>%
separate(`artist(s)_name`,into=c(paste("artist",1:max(df$artist_count))),",")
df1 <- df %>% select(`artist(s)_name`,artist_count,streams) %>%
separate(`artist(s)_name`,into=c(paste("artist",1:max(df$artist_count)),sep="-"),",")
df1 <- df %>% select(`artist(s)_name`,artist_count,streams) %>%
separate(`artist(s)_name`,into=c(paste("artist",1:max(df$artist_count)),sep="-"),",")
?paste
df1 <- df %>% select(`artist(s)_name`,artist_count,streams) %>%
separate(`artist(s)_name`,into=c(paste("artist",1:max(df$artist_count),sep="-")),",")
library(tidyverse)
names <- union(df1$`artist-1`,df1$`artist-2`,df1$`artist-3`,df1$`artist-4`,df1$`artist-5`,df1$`artist-6`,df1$`artist-7`,df1$`artist-8`)
names <- ""
names
df1 <- df %>% select(`artist(s)_name`) %>%
separate(`artist(s)_name`,into=c(paste("artist",1:max(df$artist_count),sep="-")),",")
df1
lapply(df1, function(vec) union(names,na.omit(vec)))
names
lapply(df1, function(vec) union(names,na.omit(vec)))
lapply(df1, function(vec) na.omit(vec))
names <- lapply(df1, function(vec) na.omit(vec))
names
names <- as.character(lapply(df1, function(vec) na.omit(vec)))
names
na.omit(df1$`artist-2`)
?na.omit
names <- as.character(lapply(df1, function(vec) vec[!is.na(vec)])
names <- as.character(lapply(df1, function(vec) vec[!is.na(vec)]))
names
df1$`artist-2`[!is.na(df1$`artist-2`)]
names <- as.character(lapply(df1, function(vec) vec[!is.na(vec)]))
names
df1 <- data.frame(
A = c(1, 2, NA, 4),
B = c("apple", "banana", "cherry", NA),
C = c(NA, "dog", "elephant", "fox")
)
# Remove NA values from all columns and convert to character
df1 <- df1 %>%
mutate_all(~as.character(na.omit(.)))
View(df1)
df1 <- df %>% select(`artist(s)_name`) %>%
separate(`artist(s)_name`,into=c(paste("artist",1:max(df$artist_count),sep="-")),",")
names <- as.character(lapply(df1, function(vec) na.omit(vec)))
names <- lapply(df1, function(vec) na.omit(vec))
str(names)
names[[1]]
unlist(names)
View(names)
as.character(names)
flatten(names)
as.character(flatten(names))
names <- as.character(flatten(names))
df %>% filter(`artist(s)_name`=="Peso P") %>%
mutate(solo = artist_count==1)
df %>% filter(str_match(`artist(s)_name`,"Peso P")) %>%
mutate(solo = artist_count==1)
str_match(df$`artist(s)_name`,"Peso P"
str_match(df$`artist(s)_name`,"Peso P")
str_detect(df$`artist(s)_name`,"Peso P")
df %>% filter(str_detect(df$`artist(s)_name`,"Peso P"))
df %>% filter(str_detect(df$`artist(s)_name`,"Peso P")) -> a
View(a)
df %>% filter(str_detect(df$`artist(s)_name`,"^Peso P$")) -> a
a
df %>% filter(str_detect(df$`artist(s)_name`,"Peso P$")) -> a
a
df %>% filter(str_detect(df$`artist(s)_name`,"Peso P,?")) -> a
a
df %>% filter(str_detect(df$`artist(s)_name`,"Peso P,")) -> a
a
df %>% filter(str_detect(df$`artist(s)_name`,"Peso Pluma,")) -> a
a
df %>% filter(str_detect(df$`artist(s)_name`,"Peso Pluma,|Peso Pluma$")) -> a
a
name <- "Peso P"
df %>% filter(str_detect(df$`artist(s)_name`,name+",|"+name+"$")
df %>% filter(str_detect(df$`artist(s)_name`,name+",|"+name+"$"))
df %>% filter(str_detect(df$`artist(s)_name`, pattern=name+",|"+name+"$"))
str_detect("aecfg", letters)
df %>% filter(str_detect(df$`artist(s)_name`,c(name+",",name+"$"))
df %>% filter(str_detect(df$`artist(s)_name`,c(name+",",name+"$")))
paste(name,",|",name,"$",sep="")
df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep="")))
name <- Peso Plumo
name <- "Peso Plumo"
df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep="")))
name <- "Peso Pluma"
df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep="")))
df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep=""))) %>%
mutate(solo = artist_count==1)
df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep=""))) %>%
mutate(solo = artist_count==1) ->a
a
df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep=""))) %>%
mutate(solo = artist_count==1) %>%
group_by(solo) %>%
summarise(mean(streams))
df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep=""))) %>%
mutate(solo = as.character(artist_count==1)) %>%
group_by(solo) %>%
summarise(mean(streams,na.rm=T))
df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep=""))) %>%
mutate(solo = artist_count==1) %>%
group_by(solo) %>%
summarise(mean(streams))
df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep=""))) %>%
mutate(solo = artist_count==1) %>%
group_by(solo) %>%
summarise(mean(as.numeric(streams)))
df1 <- df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep=""))) %>%
mutate(solo = as.character(artist_count==1)) %>%
group_by(solo) %>%
summarise(mean(as.numeric(streams)))
df1
df1["TRUE",2]>df1["FALSE",2]
df1["TRUE",2]
df1[["TRUE",2]]
df1[df1$solo=="TRUE",]
df1[df1$solo=="TRUE",2]
df1[[df1$solo=="TRUE",2]]
df1[df1$solo=="TRUE",2] >1
df1[df1$solo=="TRUE",2] >100000000
df1[df1$solo=="TRUE",2] >1000000000
artists
artists <- vector("string")
artists <- vector("character")
artists
if(df1[df1$solo=="TRUE",2]>df1[df1$solo=="FALSE",2]){
artists <- c(artists,name)
}
artists
for(name in names){
df1 <- df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep=""))) %>%
mutate(solo = as.character(artist_count==1)) %>%
group_by(solo) %>%
summarise(mean(as.numeric(streams)))
if(df1[df1$solo=="TRUE",2]>df1[df1$solo=="FALSE",2]){
artists <- c(artists,name)
}
}
artists
sum(is.na(df$artist_count))
df1 <- df %>% select(`artist(s)_name`) %>%
separate(`artist(s)_name`,into=c(paste("artist",1:max(df$artist_count),sep="-")),",")
names <- lapply(df1, function(vec) na.omit(vec))
names <- as.character(flatten(names))
artists <- vector("character")
df2 <- df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep=""))) %>%
mutate(solo = as.character(artist_count==1)) %>%
group_by(solo) %>%
summarise(mean(as.numeric(streams)))
for(name in names){
df2 <- df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep=""))) %>%
mutate(solo = as.character(artist_count==1)) %>%
group_by(solo) %>%
summarise(mean(as.numeric(streams)))
if(df1[df1$solo=="TRUE",2]>df1[df1$solo=="FALSE",2]){
artists <- c(artists,name)
}
}
traceback()
for(name in names){
df2 <- df %>% select(`artist(s)_name`) %>%
separate(`artist(s)_name`,into=c(paste("artist",1:max(df$artist_count),sep="-")),",")
names <- lapply(df2, function(vec) na.omit(vec))
names <- as.character(flatten(names))
artists <- vector("character")
df2 <- df %>% select(`artist(s)_name`) %>%
separate(`artist(s)_name`,into=c(paste("artist",1:max(df$artist_count),sep="-")),",")
names <- lapply(df2, function(vec) na.omit(vec))
names <- as.character(flatten(names))
artists <- vector("character")
for(name in names){
df1 <- df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep=""))) %>%
mutate(solo = as.character(artist_count==1)) %>%
group_by(solo) %>%
summarise(mean(as.numeric(streams)))
if(df1[df1$solo=="TRUE",2]>df1[df1$solo=="FALSE",2]){
artists <- c(artists,name)
}
}
df1 <- df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep=""))) %>%
mutate(solo = as.character(artist_count==1)) %>%
group_by(solo) %>%
summarise(mean(as.numeric(streams)))
df1
dim(df1)
dim(df1) == c(1,2)
all.equal(dim(df1),c(1,2))
all.equal(dim(df1),c(2,2))
all.equal(dim(df1),c(2,1))
all(dim(df1),c(1,2))
all(dim(df1),c(1,3))
typeof(dim(df1))
typeof(c(1,3))
identical(dim(df1),c(1,2))
identical(dim(df1),as.integar(c(1,2)))
typeof(1:2)
identical(dim(df1),1:2)
identical(dim(df1),2:2)
c(2,2)
c(2L,2L)
typeof(c(2L,2L))
for(name in names){
df1 <- df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep=""))) %>%
mutate(solo = as.character(artist_count==1)) %>%
group_by(solo) %>%
summarise(mean(as.numeric(streams)))
if(!identical(dim(df1),c(2L,2L))){
next
}
if(df1[df1$solo=="TRUE",2]>df1[df1$solo=="FALSE",2]){
artists <- c(artists,name)
}
}
names
sort(names)
View(df2)
str_replace_all(names, " ", "")
names<-str_replace_all(names, " ", "")
sort(names)
names <- unique(names)
names
sort(names)
names <- sort(names)
names <- names[-1]
names
for(name in names){
df1 <- df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep=""))) %>%
mutate(solo = as.character(artist_count==1)) %>%
group_by(solo) %>%
summarise(mean(as.numeric(streams)))
if(!identical(dim(df1),c(2L,2L))){
next
}
if(df1[df1$solo=="TRUE",2]>df1[df1$solo=="FALSE",2]){
artists <- c(artists,name)
}
}
artists
names
artists
name <- "Kendrick Lamar"
df1 <- df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep=""))) %>%
mutate(solo = as.character(artist_count==1)) %>%
group_by(solo) %>%
summarise(mean(as.numeric(streams)))
1
df1
if(!identical(dim(df1),c(2L,2L))){
next
}
if(df1[df1$solo=="TRUE",2]>df1[df1$solo=="FALSE",2])
df1[df1$solo=="TRUE",2]>df1[df1$solo=="FALSE",2]
artists <- vector("character")
artists <- c(artists,name)
names
df2 <- df %>% select(`artist(s)_name`) %>%
separate(`artist(s)_name`,into=c(paste("artist",1:max(df$artist_count),sep="-")),",")
names <- lapply(df2, function(vec) na.omit(vec))
names <- as.character(flatten(names))
names <- str_replace_all(names, " ", "")
names <- unique(names)
names <- sort(names)
names <- names[-1]
artists <- vector("character")
for(name in names){
df1 <- df %>% filter(str_detect(df$`artist(s)_name`,paste(name,",|",name,"$",sep=""))) %>%
mutate(solo = as.character(artist_count==1)) %>%
group_by(solo) %>%
summarise(mean(as.numeric(streams)))
if(!identical(dim(df1),c(2L,2L))){
next
}
if(df1[df1$solo=="TRUE",2]>df1[df1$solo=="FALSE",2]){
artists <- c(artists,name)
}
}
artists
library(tidyverse)
df <- read_csv('spotify-2023.csv')
df %>% filter(`in_spotify_playlists`>`in_apple_playlists`) %>%
filter(in_spotify_charts==0 & in_apple_charts>0) %>%
pull(track_name)
